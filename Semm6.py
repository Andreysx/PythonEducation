# Задача №39. Решение в группах
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# Ввод:
# 7
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1
# Вывод:
# 3 3 2 12
# (каждое число вводится с новой строки)

# import random

# n = int(input())
# m = int(input())

# array1 = [random.randint(1,15) for i in range(n)]#Генератор рандомных чисел от 1 до 15 с помощью функции random
# array2 = [random.randint(1,15) for i in range(m)]#Генератор рандомных чисел от 1 до 15 с помощью функции random

# print(array1)
# print(array2)

# array3 = []

# print([value for value in array1 if value not in array2])## Первый спсоб решения задачи при помощи возможномтей Пайтона
# print("----------------------------------------------------")

# for i in range(len(array1)):
# counter = 0
# for j in range(len(array2)):
# if array1[i] == array2[j]:
# counter += 1
# if counter == 0:
# array3.append(array1[i])

# print(array3)

# print("----------------------------------------------------")

# print(list(filter(lambda x: x not in array2,array1)))

# Задача №41. Решение в группах
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.

# Ввод
# 5
# 1 2 3 4 5
# Вывод
# 0

# Ввод 5 -- 1 5 1 5 1
# Вывод 2

# num = int(input("Введите количество элементов массива: "))
# data = [random.randint(0,9) for i in range(num)]

# print(data)
# counter = 0
# for i in range(1,len(data) - 1):
# if data[i-1] < data[i] and data[i+1] < data[i]:
# counter +=1
# print(f"{i}:{data[i]}")

# print(counter)

# Задача №43. Решение в группах
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# Ввод
# 1 2 3 2 3
# Вывод
# 2

# import random
# import math
# from collections import Counter

# data = [random.randint(0, 5) for i in range(10)]
# print(data)
# res = Counter()
# for i in data:
# res[i] += 1
# print(res)

# counter = 0

# for k, y in res.items():
# if y > 1:
# counter += y//2
# print(counter)

# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).

# Ввод
# 300
# Вывод
# 220 284

# import math

# def get_myltiplies(number: int) -> list:
# ls = []
# for i in range(1, int(math.sqrt(number)) + 1):
# if number % 1 == 0:
# ls.append(i)
# if not ls.__contains__(number / 1) and i != 1:
# ls.append(int(number / 1))
# return ls

# limit = 10000

# for i in range(1, limit):
# s = sum(get_myltiplies(i))
# if i == sum(get_myltiplies(s)) and i < s:
# print(f"{i} - {s}")